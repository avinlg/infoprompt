name: Build & Publish APT repo

on:
  push:
    branches: [ main ]

jobs:
  build-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Debian packaging tools
        run: sudo apt-get update && sudo apt-get install -y dpkg-dev reprepro gnupg

      - name: Build .deb
        run: |
          cd packaging
          chmod +x pack.sh
          ./pack.sh

      - name: Create repo and include package
        run: |
          mkdir -p repo/conf repo/dists/stable/main/binary-all repo/pool
          printf '%s\n' \
            'Origin: infoprompt' \
            'Label: infoprompt' \
            'Codename: stable' \
            'Architectures: all' \
            'Components: main' \
            'SignWith: false' \
            > repo/conf/distributions
          reprepro -b repo includedeb stable ../infoprompt_0.1.0_all.deb

      - name: Import GPG key and sign Release
        if: ${{ secrets.GPG_PRIVATE_KEY != '' }}
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          set -euo pipefail
          # Import private key
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          # Extract primary key ID (long keyid/fingerprint) from secret keys
          GPG_KEY_ID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec/ {print $5; exit}')
          echo "Using GPG key ID: $GPG_KEY_ID"
          # Export public key for users
          gpg --armor --export "$GPG_KEY_ID" > repo/infoprompt.gpg
          # Create signed InRelease (clear-signed) and detached Release.gpg (if Release exists)
          if [ -f repo/dists/stable/Release ]; then
            gpg --batch --yes --default-key "$GPG_KEY_ID" --clearsign -o repo/dists/stable/InRelease repo/dists/stable/Release || true
            gpg --batch --yes --default-key "$GPG_KEY_ID" --detach-sign -a -o repo/dists/stable/Release.gpg repo/dists/stable/Release || true
          fi

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./repo
